ANSIBLE

ARCHITECTURE
 	Control Node (Admin laptop, etc)
  	 	Have Ansible project files
  	Managed Hosts
     	Collected in called inventory (static or dynamic text)
	Script Type
		Playbook (series of tasks in YAML format)
			Task (run a module in python based, etc)
			Declarative type
			*Attention
			Permission, mounted file system
			
RED HAT ANSIBLE TOWER
	Enterprise framework Ansible
	to
		control access playbooks
		manage inventory
	provide
		web UI
		RESTful API
	
USE CASES
	1. Config Management and Deployment
	2. Application Deployment
	3. Provisioning (RHAT)
		ex. 
			PXE booting
			kickstarting bare-metal  or VM
			creating VM (from template)
			creating cloud instance (from template)
	4. CI/CD (Playbook)
	5. Security and Compliance
	6. Orchestration (interact multiple configuration)
	
INSTALL ANSIBLE
	Prerequesities
		1. Python 2 (RHEL 7) or Python 3 (RHEL 8)
			yum list installed python
		2. sshpass
		3. Python3-markupsafe
		4. Python3-jinja2
		5. Python3-babel
		6. Python3-jmespath
		7. python*-winrm (windows env) package
		8. libselinux-python
		
		Windows Server
		1. PowerShell 3.0
		2. .NET Framework 4.0
		
	Repositories Ansible (RHEL 8)
		
	Install
		subscription-manager register
		subscription-manager refresh
		subscription-manager list --available
		subscription-manager attach --pool=<pool id here of ansible subscription>
		*subscription-manager repos --enable rhel-7-server-ansible-2-rpms (RHEL7)
		subscription-manager repos --enable satellite-tools-6.6-for-rhel-8-x86_64-rpms
		subscription-manager repos --enable ansible-2-for-rhel-8-x86_64-rpms (RHEL8)
		yum install ansible
		
		
ANSIBLE CONFIGURATION
	Default path
	etc path
		/etc/ansible/ansible.cfg (defaults, prio=3)
	homedir
		~/.ansible.cfg (user config, prio=2)
	current dir
		./ansible.cfg (user config, prio=1) *recommended
	
	check config file location
		ansible --version or -v
		
	ex. ansible.cfg
		[defaults]
		inventory = ./inventory *directory config
		remote_user = user
		ask_pass = false >>> SSH public key authentication
		ansible_conncection: winrm / smart / etc
		ansible_port: 5986
	
		[privilage_escalation]
		become = true >>> auto switch user
		become_method = sudo
		become_user = root
		become_ask_pass = false
	
	*Set useransible to have no password
	/etc/sudoers/
		## password-less sudo for Ansible user
		someuser ALL=(ALL) NOPASSWD:ALL

NETWORK DEVICE CONFIGURATION (/etc/ansible/hosts)*use different path recommended
	Technique in control node
		1. CLI over SSH
		2. XML over SSH
		3. API over HTTP(S)
	
	constum dir inventory command
	ansible <host-or-group> -i <dirname> --list-hosts
	*run in right directory
	
	ex.
	[group hosts]
	web1.example.com
	web2.example.com
	
	[group2 hosts]
	db1.example.com
	db2.example.com
	
	[group3 hosts]
	web1.example.com
	db1.example.com
	
	[group:nested]
	canada
	usa
	
	ex.
	[group]
	washington[1:2].example.com

AD HOC COMMAND
	COMMAND
	ansible <argument/hosts> <argument name/sub program from argument/module> [option for argument name] [option for argument name]
	ex.
	1. ansible <hosts> -m module [-a 'module arguments'] [-i inventory]
	2. ansible all -m ping
	3. ansible <hosts> -m ping
	4. ansible -m user -a 'name=newbie uid=4000 state=present' hostname
		check system module in ansible website

	MODULE NAME	DESCRIPTION
	k8s 		Manages Kubernetes objects. This module has access to all Kubernetes APIs, allowing you to create, update, or delete Kubernetes objects.
	k8s_info 	Retrieves information about Kubernetes objects.
	k8s_scale 	Sets a new size for a Deployment, ReplicaSet, Replication Controller, or Job.
		dependencies
		     openshift >= 0.6
			PyYAML >= 3.11
	k8s_auth 	Authenticates to Kubernetes clusters which require an explicit login step, like OpenShift. This module returns an api_key that the other modules can use for authentication.
		dependencies
			urllib3
			requests
			requests-oauthlib 
	k8s_service 	Manages Services on Kubernetes.

	MODULE CATEGORY					MODULES
	Files Modules					copy [argument] >>> 'argument'
							file [argument] 
							lineinfile [argument] 
							synchronize [argument]
	Software package modules			package [argument] 
							yum [argument] 
							apt [argument] 
							dnf [argument] 
							gem [argument]
							pip [argument]
	System modules					firewalld [argument]
							reboot [argument]
							service[argument]
							user [argument]
	Net Tools					get_url [argument]
							nmcli [argument]
							uri [argument]
	*argument sometimes mandatory

	MODULE AUTH OPTION
		- If no connection options are provided, 
		  the openshift client attempts to load the default configuration file from ~/.kube/config.
		- To authenticate via by HTTP Basic Auth, provide the host, username, and password module parameters. 
		  The optional proxy module parameter connects through an HTTP proxy.
		- The k8s_auth module provides an authentication token that can be used with the api_key module parameter to authenticate with the API.
		- Verify SSL certificates for the API server using the ca_cert, client_cert, and client_key module parameters. 
		  Toggle certificate validation with the validate_certs module parameter.

ARBITARY COMMAND
	command run speciefied as an argument to the module using -a option
	ansible <hosts> -m command -a </pathofcomman(bin)>
	ansible <hosts> -m shell -a
	ex.
	ansible mymanagehost -m command -a /usr/bin/hostname -o (output readability)
	
	CONFIGURATION FILE DIRECTIVES			COMMAND-LINE OPTION
	Inventory					-i
	Remote_user					-u
	Become						--become,-b
	Become_method					--become-method
	Become_user					--become-user
	Become_ask_pass					--ask-become-pass, -K
	*check in ansible --help
	
IMPLEMENTING PLAYBOOKS

	AD HOC VERSION
	ansible -m user -a "new=newbie uid=4000 state=present"
	
	PLAYBOOK VERSION (YAML.yml)
	---
	- name: Configure important user consistently
	  hosts: servera.lab.example.com
	  tasks:
	    - name: newbie exist with UID 4000
	      user:
	         name: newbie
		 uid: 4000
		 state: present
		 
	    - name: web server is enabled
	      service:
	      	name: httpd
		enabled: true
		
	   - name: NTP server is enabled
	     service:
	        name: chronyd
		enabled:true
		
	   - name: Postflix is enabled
	     service:
	        name: postflix
		enabled: true
	...
	* - is item
	* no - is keys-value pairs
	* - name is like label (attribute) for purpose of the task 
	* tab indentation is not allowed
	
	create custom setting of vi editor
	add line in $HOME/.vimrc
		autocmd FileType yaml setlocal ai ts=2 sw=2 et
		
RUNNING PLAYBOOK
	RUN
		ansible-playbok -v -vv -vvv -vvvv <configfilename.yml>
	SYNTAX CHECK
		ansible-playbook --syntax-check webserver.yml
	DRY RUN (info bakal ada perubahan apa, gk langsung implementasi)
		ansible-playbook -C webserver.yml
	ANSIBLE CONFIG (/etc/ansible/ansible.cfg or )
		remote_user: remoteuser
		become: true
		become_method: sudo
		become_user: privileged_user
	MANAGING VARIABLES
		VALID VARIABLE NAMES = KATASATU_KATADUA
		Global Scope: From Ansible configuration
		Play Scope: Play and related structures
		Host Scope: set in inventory (fact gathering, or registered tasks)
		
	
