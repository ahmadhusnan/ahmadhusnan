Summary RHEL Book

Check and Setting Wide Locale Settings (Language, Keybord)
(/etc/locale.conf) (man localectl(1) vconsole.conf(5))
	-localectl [set-locale] [LANG=locale(file.utf8)]
	-yum list langpacks-* [fr,en]
	-yum repoquery --whatsupplements
	-yum info langpacks-SUFFIX [fr,en]

Navigating Files 
	-pwd
	-ls

Files Management
	-mkdir
	-cp
	-mv
	-rm
	-rmdir

Files Linked
Soft Linked (/home/user/configfiles)
	-ln -s (existingfile/pointed) (namedfile)
Hard Linked
	-ln (existingfile/pointed) (namedfile)

Variable Expansion
	-VARIABLENAME=value
	-USERNAME=opertator
	-${VARIABLENAME}
	bisa di extent dengan for command
	
Command Substitution
	-$(date +%A)
	-$(command)
exeption \$(text)
	'Literally text'
	
Configuring Sudo (/etc/sudoers.d)
	%wheel ALL=(ALL) ALL
	user based (/etc/sudoers.d/user01)
		user01 ALL=(ALL) ALL
	group based (/etc/sudoers.d/group01)
		%group01 ALL=(ALL) ALL
	exeption 
	(run command as another user without entering their password)
		ansible ALL=(ALL) NOPASSWD:ALL
	(run command as root without password) (/etc/sudoers)
		ec2-user ALL=(ALL) NOPASSWD: ALL

Managing Local User (/etc/login.defs)
	-useradd
	-usermod
		-c (comment)
		-g (gid)
		-G (group)
		-a (add supplementary groups)
		-d (specify homedir)
		-s (specify log shell shelldir)
		-L (Lock)
		-U (Unlock)
	ex. usermod -aG (group) (user)

Managing Local Group
	-groupadd -g(gid) ()name
	
Password Aging
	-chage (option) (user)
		-d (last change date) -d 0 (force change password immediately)
		-m (min days)
		-M (max days)
		-W (warn days)
		-I (inactive date)
		-E (YYYY-MM-DD) from date -d "+xx days" +%F
		-s (nologin shell) /sbin/nologin (user)
	Text Editing (/etc/login.defs)
	-PASS_MAX_DAYS
	-PASS_MIN_DAYS
	-PASS_MIN_LEN
	-PASS_WARN_AGE

File Permission
Ordinary
	1. chown -r (user name):(groupname) (dir or file)
	2. chmod (angka / ugoa+rwxs) -r (dir or file)
		special permission
		u+s g+s o+t
	3. umask (kebalikan chmod angka)
		file dir (/etc/profile.d)
		echo "umask 007" >> ~/.bashrc (default user)
	4. chgrp -R (group) (/directory)
		
ACLs (after make ordinary permission)
	1. setfacl -Rm g:group:rwX (/dir)
	2. setfacl -Rm u:user:--- (/dir)
	3. setfacl -m d:g:group:rwx (/dir)
	4. getfacl (/dir)
	5. setfacl -x u:user:rwx (/dir)  >>>> delete

Sistem Process, Daemons, and Services
	1. systemctl list-units (--failed) --type=service/socket
		sshd.service (SSH)	
	2. systemctl (option) (service)
		status
		enabl(ed)
		disabl(ed)
		start(ed)
		stop(ed)
		mask(ed)
		restart
		*reload or reload-or-restart
		daemon-reload
		
	3. Netrowrk time syncronization (NTP)
		systemctl (option) chronyd
		(OPTION) status, stop, start, restart, reload, mask umask, enable
		disable, list-dependencies

Netwok Configuration
	1. IP Addres
		ip addr / ip a
	2. Statistik 
		ip -s link show (device) 
	3. Route
		ip route
	4. Socket
		ss -lt
	5. File Location (/etc/sysconfig/network-script) new added configuration
		nmcli con (option)
			(OPTION) show, up, down, del 
		nmcli con add con-name "(name)" ifname (name) type ethernet ip4 (IP/24)
		gw4
		nmcli con mod "name" ipv.dns (IP)
		nmcli con mod "name" connection.autoconnect (yes/no)
		nmcli dev status
			  dis
		nmcli con reloadnmcl
			ADD MORE ADDRESS
			echo "IPADDR1=10.0.1.1" >> /etc/sysconfig/network-scripts/
			or
			mod +ipv4.addresses IP
			echo "PREFIX1=24" >> /etc/sysconfig/network-scripts/
			nmcli con reload
		nmcli con mod ID +ipv4.dns IP
	
	6.nmcli vs script file	
		nmcli con mod		IFCFG-*			Effect
		ipv4.method manual	BOOTPROTO=none		IPv4 configured static
		ipv4.method auto	BOOTPROTO=dhcp		using DHCP
		ipv4.addresses		IPADDR0=192.0.2.1	set static IPv4 address
		"192.0.2.1/24					prefix and gateway
		192.0.2.254"
		ipv4.dns 8.8.8.8	DNS0=8.8.8.8		modify /etc/resolv.conf (nameserver)
		ipv4.dns-search		DOMAIN=example.com	mod /etc/resolv.conf
		example.com					search
		ipv4.ignore-auto-dns	PEERDNS=no		ignore DNS server
		true
		ipv6.method manual	IPV6_AUTOCONF=no	IPv6 static
		ipv6.method auto	IPV6_AUTOCONF=yes	using SLAAC
		ipv6.method dhcp	IPV6_AUTOCONF=no	using DHCPv6 not SLAAC
					DHCPV6C=yes
		ipv6.addresses		IPV6ADDR=xxxa/64	set static IPv6, prefix
		"2001:db8::a/64		IPV6_DEFAULTGW=2001:db8	gateway
		2001:db8::1"
		ipv6.dns ..		DNS0=			mod /etc/resolv.conf
		connection.autoconnect	ONBOOT=yes		automatically active
		yes
		connection.id ens3	NAME=ens3		name of this connection
		connection.interface-	DEVICE=ens3		bound with net interface
		name ens3					name
		802-3-ethernet.mac-add	HWADDR=...		MAC address
		ress ...
		
	7. Hostname (/etc/hosts)
		hostname
		hostnamectl set-hostname (name) >>>> /etc/hostname
		host class
		getent host class
		ping -c3 class
	8. Port 
		netstat or ss
			-t (TCP socket)
			-u (UDP socket)
			-l (listening socket)
			-a (all sockets)

SSH Configuration
	1. ssh user@server/IP
	2. ssh-keygen (enter > enter > enter) (~/.ssh/id_rsa & ~/ssh/id_rsa.pub)
		ssh-copy-id -i (key location) user@server
			systemctl reload sshd
	3. ssh-keygen -f .ssh/(filename.pub)
		ssh-copy-id -i (filename.pub) (user@remotehost)
			ssh -i (filename.pub) (user@remotehost	)
	4. RULE (/etc/ssh/sshd_config) 
		PermitRootLogin
		PasswordAuthentication
			systemctl reload sshd
			
Installing and Update Package (/etc/command)
	Query
	1. rpm -q(query) [select-options] [query-options]
		-qi (detail info)
		-ql (list file)
		-qc (config file)
		-qd (documentation)
		-q --scripts (list shell scripts)
		-q --changelog (list change information)
	Install
		1. rpm -ivh xxxx.rpm
	YUM
		1. yum search 'keyword'
		2. yum info (PACKAGENAME)
		3. yum orivides (PATHNAME)
		4. yum install (PACKAGENAME)
		5. yum update 
		6. yum list kernel
		7. yum remove (PACKAGENAME)
		8. yum grouplist
		9. yum group info "Packagename"
		10. yum group install
	Modules and Stream
		1. yum module list [package]
		2. yum module info [package]
		3. yum module install -y [package]
		or yum module install @[package]
		4. yum module enable [package]
		5. yum module remove -y [package]
			yum module list [package]
			yum module disable perl

Journal Entries (notice, warning, error)
(/etc/systemd/journald.conf)
	Service name : systemd-journald
	State : persistent, volatile, auto
	1. journalctl -p (filter)
			debug, info, notice, warning, err, crit, alert, and emerg
			
Maintaining Accurate Time
	Using network time Protocol (NTP)
	1. timedatectl (option)
		list-timezones
		set-timezone
		set-time
		set-ntp (true)
	CHRONYD (/etc/chrony.conf)
	look for timedrift
	2. tzselect

Scheduling User job
	1. crontab -e
		min jam hari(1-31) bulan(1-12) rentang hari(1-7) (/bashcommand dir) >> (/output dir)
		/home/student/my_first_cron_job.txt
		*/2 = setiap 2
	2. crontab -ls
	3. while ! test -f my_first_cron_job.txt; do sleep 1s; done
	4. crontab -r(remove all)
	EXAMPLE
	5 0 * * * Command >> Output
	*/2 08-20 * * Mon-Fri Command >> Output

	1. at (interactive way)
		-at -q g teatime
			at> /command
			at> Ctrl+d
	2. atq (queue)
	3. watch atq

	SYSTEMD TIMER ()
	1. yum install sysstat
	2. systemctl daemon-reload
	3. systemctl enable --now <unit name>.timer
	Timer configuration
		1. cp /usr/lib/systemd/system/sysstat-collect.timer /etc/systemd/system/sysstat-collect.timer
		2. edit /etc/systemd/system/<newname>.timer [Timer and Install]
		3. systemctl daemon-reload
		4. systemctl enable --now sysstat-collect.timer
		5. while [ $(ls /var/log/sa | wc -l) -eq 0 ]; do sleep 1s; done

Temporary Files (TMP)
	1. systemd-tmpfiles
	Cleaning
	2. systemd-tmpfiles-clean.timer >>>>execute systemd-tmpfiles --clean
		systemctl cat systemd-tmpfiles-clean.timer
	3. systemctl daemon-reload
	4. systemctl enable --now systemd-tmpfiles-clean.timer
	Manual cleaning
	1. cp /usr/lib/tmpfiles.d/tmp.conf /etc/tmpfiles.d/tmp.conf
	2. systemd-tmpfiles --clean /etc/tmpfiles.d/tmp.conf
		ADD TMP Directory
		1. touch /etc/tmpfiles.d/<dirname>.conf
			d </dirname> 0700 root root 30s
		2. systemd-tmpfiles --create /etc/tmpfiles.d/<dirname> >>>>(create dir)
		3. ls -ld /run/momentary
		4. systemd-tmpfiles --clean /etc/tmpfiles.d/<dirname.conf>
		
Tuning system performance
	Tuned
	1. yum install tuned
	2. tuned-adm list
		balanced
		desktop
		throughput-performance
		latency-performance
		network-latency
		network-throughput
		powersave
		oracle
		virtual-guest
		virtual-host
	3. tuned-adm active
	4.tuned-adm recommend
	
	Prioritize Task
	nice -n (number) PID
	renice -n (number) PID 

PRE_EXERCISE & PRE_LAB

Securing Files with ACLs
	1. mkdir -p (/dir)
	2. chown :(group) -R (/dir)
	3. chmod 770 -R (/dir)
	4. chmod g+s -R (/dir)
	5. vi (/file) + chmod +x
	6. useradd
	7. groupadd
	
Mounting & Unmounting
	1. Add 2gb disk
	2. parted (/dev/sdb) mklabel gpt/msdos
	3. parted (/dev/sdb) mkpart (primary / name) xfs / swap min max
		Logical Volume
			parted -s /dev/sdb set(1,2,3) lvm on
		Physical Volume
			pvcreate /dev/sdb1 /dev/sdb2 (2 physical volume)
			pvdisplay
		Volume Group
			vgcreate (nama vg) /dev/sdb1 /dev/sdb2
			vgdisplay
			EXTEND
				vgextend (vg name) (pv name)
				vgdisplay
		Logical Volume
			a. Linear Logical Volume 
			lvcreate -n (nama) -L (ukuran M) (nama vg)
			EXTEND
				lvextend -L +300M (name lv)
				lvdisplay
				udevadm settle
				MOUNT
				xfs_growfs (/dir)
				df -h (/mountpoint)
			b. Striped Logical Volume (read/write parallel) (raid1)
			lvcreate -n (nama) -L (ukuran M) -i2(physical volume num) -I64(stripes 64 Kb)
			c. Mirrored Logical Volume (raidx)
			lvcreate -n (nama) -L (Ukuran M) -m1
			
	4. udevadm settle
	5. mkfs.xfs / mkswap (/dev/sdb) >>> ngasih UUID
		Logical Volume
			mkfs.xfs /dev/(vg name)/(logical volume)
	6. mkdir (directory mount (empty))
	7. lsblk -fp (/dev/sdb)
	8. mount (/dev/sdb) (/dir)
		temporary, mount UUID="xxx" /dir	
		permanent, vi /etc/fstab
		- UUID=xxxx /mount xfs default 0 0
		- UUID=xxxx swap swap default/prio=x 0 0
		LOGICAL VOLUME
		- /dev/(vg name)/(logical volume)
	9. systemctl daemon-reload
	10. mount -a
	Add Device Mapper(DM) Integrity RAID LV
	1. lvconvert --raidintegrity y /dev/
	Remove Integrity
	1. lvconvert --raidintegrity n /dev/
	View DM Integriy
	1. lvs -a volume group
	
STRATIS (LAYERED STORAGE)
	1. yum install stratis-cli stratisd
	2. systemctl enable --now stratisd
	3. stratis pool create pool1 /dev/vdb
	4. stratis pool list
	Add more block
	5. stratis pool add-data pool1 /dev/vdc
	6. stratis blockdev list pool1
	Create
	7. stratis filesystem create pool1 filesystem1
	Snapshot
	8. stratis filesystem snapshot pool1 filesystem snapshot1
	9. stratis filesystem list
	Mount
	10. lsblk --output=UUID /stratis/pool1/filesystem1
	entry to /etc/fstab
	11. UUID=xxx /mount xfs defaults,x-systemd.requires=stratisd.service 0 0

EXTEND SWAP SPACE
	1. mkswap /dev/vgname/lvname
	2. swapon -va /dev/vgname/lvname

SELinux (httpd) (/etc/selinux/config)
	1. getenforce
	2. systemctl
	
	1. sudo yum install httpd -y
	(HTML Location)
	2. semanage = yum install policycoreutils-python-utils -y
	3. yum install setroubleshoot-server -y
	4. systemctl stop firewalld (to access without determine port)
	5. vi/etc/httpd/conf/httpd.conf  TEST http://server/index.html
		"ECHO"
	6. vi /etc/httpd/conf.d/conf.d/userdir.conf
		<VirtualHost *:80>parte
			DocumentRoot /userdir
		</VirtualHost>
		
		<Directory /custom>
		Require all granted
		</Directory>
	7. systemctl restart --now httpd
	8. systemctl enable httpd
	
	
	File location (/etc/selinux/config) 
		1. grep '^SELINUX' /etc/selinux/config
		2. systemctl reboot
	Context (httpd_sys_content_t)
		1. ls -Z -d (/dir >> /var/www/html/index.html)
	/Remove Context
		1. semanage fcontext -a/d/l -t(type) httpd_sys_content_t '/directory(/.*)?'
		2. restorecon -RFvv /directory
	BOOLEANS 
	1. getsebool -a
	2. setsebool -P(permanent) (boolean) (on/off)
	3. setsebool httpd_enable_homedirs on
		1. vim /etc/httpd/conf.d/userdir.conf
		comment #UserDir disabled
		Userdir public_html
		2. mkdir ~/public_html
		3. chmod 711~
	
NFS Mounting
	1. sudo yum install nfs-utils
	2. mkdir mountpoint
	3. mount -t nfs server:/dir /mountpoint
	4. (TEMPORER) mount -t nfs -o rw, sync server:/share mountpoint
	4. (PERSISTENT) vim /etc/fstab
		server:/share /mountpoint nfs rw,soft 0 0
	5. mount -a
	6. systemctl daemon-reload
	7. nfsconf --set nfsd udp n
	8. nfsconf --set nfsd vers2 n
	9. nfsconf --set nfsd vers3 n
	10. nfsconf --set nfsd tcp y
	11. nfsconf --set nfsd vers4 y
	12. nfsconf --set nfsd vers4.0 y
	13. nfsconf --set nfsd vers4.1 y
	14. nfsconf --set nfsd bers4.2 y
	
Firewall
	1. firewall-cmd
	2. nftables
		sudo systemctl status nftables
		sudo systemctl mask nftables
Managing
	1. systemctl start firewall
	2. sudo yum install httpd mod_ssl
	3. sudo bash -c "echo 'I am servera.' > /var/www/html/index.html"
	4. systemctl enable --now httpd
	5. curl -k http://server
		curl 7 failed(port)
	6. systemctl status firewalld
	7. systemctl restart firewalld
	
	WEB CONSOLE
	https://server:9090
	add https services
	curl https berhasil
	
	MASK FIREWALL
	1. systemctl status nftables
	2. systemctl mask nftables
	
Custom Port
	1. semanage port -a -t http_port_t -p tcp X
	2. firewall-cmd --permanent --add-port=82/tcp
	3. firewall-cmd --reload
	4. vi /var/www/html/index.html
		"HELLO"
	5. restorecon -vvFR /var/www/html
	6. vi /etc/httpd/conf.d/lab-selinux-port.conf
	
		Listen XX
		<VirtualHost *:82>
			DocumentRoot /var/www/html
		</VirtualHost>
	
		<Directory /var/www/html>
		Require all granted
		</Directory>
	if fail restart httpd
		sealert -a /var/log/audit/audit.log
	7. semanage port -k | grep http
	8. curl http://server:XX dari internal dan eksternal
		
	
